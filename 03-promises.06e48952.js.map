{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,qBAAqBN,QAAeC,QAE5CM,EAAO,oBAAoBP,QAAeC,OAAW,GACtDA,EAAM,G,CAsBEQ,SAASC,cAAc,SAC/BC,iBAAiB,UAnBxB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAeF,EAAEG,cAAcC,SAC/BC,EAAWC,OAAOJ,EAAab,MAAMkB,OACrCC,EAAUF,OAAOJ,EAAaO,KAAKF,OACnCG,EAAYJ,OAAOJ,EAAaS,OAAOJ,OAE7C,IAAK,IAAIK,EAAI,EAAGA,EAAIF,EAAWE,GAAK,EAAG,CACrC,MAAMC,EAAeR,EAAWO,EAAIJ,EACpC,GAAIK,EAAe,EACf5B,EAAA6B,OAAOC,QAAQ,gCAAgCH,EAAE,UAChD,CACazB,EAAcyB,EAAI,EAAGC,GAC7BG,MAAKC,GAAOhC,EAAA6B,OAAOI,QAAQD,KAAME,OAAMC,GAAOnC,EAAA6B,OAAOC,QAAQK,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {  \n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) \n        resolve(`Fulfilled promise ${position} in ${delay} ms`);\n      else \n        reject(`Rejected promise ${position} in ${delay} ms`);    \n    }, delay);\n  })   \n};\n\nfunction submitHandle(e) {\n  e.preventDefault(); \n  const formElements = e.currentTarget.elements;\n  const delayVal = Number(formElements.delay.value); \n  const stepVal = Number(formElements.step.value); \n  const amountVal = Number(formElements.amount.value);     \n  \n  for (let i = 0; i < amountVal; i += 1) {\n    const currentDelay = delayVal + i * stepVal;\n    if (currentDelay < 0) \n        Notify.failure(`Delay is negative on promise ${i+1}!`);    \n    else {\n      const promise = createPromise(i + 1, currentDelay);\n      promise.then(res => Notify.success(res)).catch(err => Notify.failure(err));   \n    } \n  }  \n}\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', submitHandle);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","delayVal","Number","value","stepVal","step","amountVal","amount","i","currentDelay","Notify","failure","then","res","success","catch","err"],"version":3,"file":"03-promises.06e48952.js.map"}